' Gambas class file

' Mundus
' Copyright(C)2012 sebikul <sebikul@gmail.com>

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Public Sub Form_Open()
  
  Me.Center
  
  IconPanel1.Index = 0
  
  cbAutoBackup.Text = IIf(Main.Settings["Backups/AutoBackup", True], ("Yes"), ("No"))
  
  cbEnableReports.Text = IIf(Main.Settings["EnableReports", False], ("Yes"), ("No"))
  
  cbAutoExpand.Text = IIf(Main.Settings["AutoExpand", False], ("Yes"), ("No"))
  
  cbEnableNotifications.Text = IIf(Main.Settings["EnableNotifications", False], ("Yes"), ("No"))
  
  vbMaxSize.Value = Main.Settings["Backups/MaxSize", 0]
  
End

Public Sub Form_KeyPress()
  
  If Key.Code = Key.Escape Then Me.Close
  
End

Public Sub Form_Close()
  
  Main.Settings["Backups/MaxSize"] = vbMaxSize.Value
  
  Main.Settings["Backups/AutoBackup"] = (cbAutoBackup.Text = ("Yes"))
  
  Main.Settings["EnableReports"] = (cbEnableReports.Text = ("Yes"))
  If Main.Settings["EnableReports"] Then Report.Session.Clear()
  
  Main.Settings["AutoExpand"] = (cbAutoExpand.Text = ("Yes"))
  
  Main.Settings["EnableNotifications"] = (cbEnableNotifications.Text = ("Yes"))
  
End

Public Sub IconPanel1_Click()
  
  If IconPanel1.Index = 3 Then UpdateMaintenance()
  
End

Private Sub UpdateMaintenance()
  
  Dim iCount As Integer
  Dim sModule As String
  
  vbTotalReports.Value = Dir(Main.PATH_REPORTS, Null, gb.File).Count
  
  btnCleanReports.Enabled = (vbTotalReports.Value > 0)
  
  iCount = 0
  
  For Each sModule In Dir(Main.PATH_BACKUPS, Null, gb.Directory)
    iCount += Dir(Main.PATH_BACKUPS &/ sModule, Null, gb.File).Count
  Next
  
  vbTotalBackups.Value = iCount
  
  btnCleanBackups.Enabled = (iCount > 0)
  
End

Public Sub btnCleanBackups_Click()
  
  If Message.Warning(("Are you sure you want to delete all your backups?"), ("No"), ("Yes")) = 1 Then Return
  
  Cleaner.Clean(Main.PATH_BACKUPS, False)
  UpdateMaintenance()
  
End

Public Sub btnCleanReports_Click()
  
  If Message.Warning(("Are you sure you want to delete all your reports?"), ("No"), ("Yes")) = 1 Then Return
  
  Cleaner.Clean(Main.PATH_REPORTS, False)
  UpdateMaintenance()
  
End

Public Sub btnResetDefaults_Click()
  
  If Message.Warning(("Are you sure you want to reset the settings to it's default values?"), ("No"), ("Yes")) = 1 Then Return
  
  With Main.Settings
    
    .Clear()
    .Save()
    .Reload()
    
  End With
  
  Main.Settings["LastVersionUsed"] = Application.Version
  
  Form_Open()
  
End
