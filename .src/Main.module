' Gambas module file

' Mundus
' Copyright(C)2012 sebikul <sebikul@gmail.com>

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Public Const URL_PROJECT As String = "https://github.com/sebikul/mundus"
Public Const URL_BLOG As String = "http://sebikul.github.io/mundus"
Public Const URL_DOCS As String = "https://github.com/sebikul/mundus/wiki"
Public Const URL_BUG_NEW As String = "https://github.com/sebikul/mundus/issues/new"

Property Read PATH_MAIN As String
Property Read PATH_CONFIG As String
Property Read PATH_REPORTS As String
Property Read PATH_BACKUPS As String

Property Read Settings As Settings

Private $sSettings As Settings

Public Sub Main()

  If Not PathHelper.CheckProgram("du") Then
    Message.Title = ("coreutils not found")
    Message.Error(("You need to install coreutils"))
    Return
  Endif

  If User.Name = "root" Then
    Message.Error(("Running as root is not allowed!"))
    Return
  Endif

  If _IsRunning() Then Return

  $sSettings = New Settings(Me.PATH_CONFIG &/ "settings.conf")

  If $sSettings["LastVersionUsed", ""] < Application.Version Then

    Upgrade()

  Endif

  Modules.Load()

  fMain.ShowModal()

Finally

  Kill Me.PATH_MAIN &/ "mundus.pid"

  Main.Settings.Save()

End

Private Sub Upgrade()

  FStartUp.ShowModal()

  $sSettings["LastVersionUsed"] = Application.Version

End

Public Function Trim(Name As String) As String

  Return Replace(Name, " ", "_")

End

Public Function UnTrim(Name As String) As String

  Return Replace(Name, "_", " ")

End

Private Function PATH_MAIN_Read() As String

  Return _CheckAndCreate(User.Home &/ ".mundus")

End

Private Function PATH_CONFIG_Read() As String

  Return _CheckAndCreate(User.Home &/ ".config/Mundus")

End

Private Function PATH_REPORTS_Read() As String

  Return _CheckAndCreate(Me.PATH_MAIN &/ "reports")

End

Private Function PATH_BACKUPS_Read() As String

  Return _CheckAndCreate(Me.PATH_MAIN &/ "backups")

End

Public Function _CheckAndCreate(sPath As String) As String

  If Not Exist(sPath) Then Mkdir sPath

  Chmod sPath To "rwx------"

  Return sPath

End

Private Function Settings_Read() As Settings

  Return $sSettings

End

Private Function _IsRunning() As Boolean

  If Exist(Me.PATH_MAIN &/ "mundus.pid") Then

    If Message.Question(("Mundus is already running!"), ("Close"), ("Continue anyway")) = 2 Then
      Kill Me.PATH_MAIN &/ "mundus.pid"
    Else
      Return True
    Endif

  Endif

  File.Save(Me.PATH_MAIN &/ "mundus.pid", Application.Id)

  Return False

End
