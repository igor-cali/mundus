' Gambas module file

' Mundus
' Copyright(C)2012 sebikul <sebikul@gmail.com>

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Private $cModules As New Collection

Property Read All As Collection
Property Read Count As Integer

Public Function _get(sName As String) As Module

  If $cModules.Exist(sName) Then Return $cModules[sName]

End

Public Sub _put(mModule As Module, sName As String)

  If Not $cModules.Exist(sName) Then $cModules.Add(mModule, sName)

End

Public Sub Load() As Boolean

  Dim sList As String[]

  Dim sModule As String

  Dim tmpModule As Module

  $cModules.Clear()

  sList = Dir("./modules", "*.mundus")

  fProgress.Start(sList.Count, ("Loading Modules"), False)

  For Each sModule In sList

    sModule = File.BaseName(sModule)

    fProgress.SetStatus(Subst(("Loading module: &1"), sModule))

    tmpModule = Get(sModule)

    $cModules.Add(tmpModule, sModule)

    fProgress.Increment()

  Next

  fProgress.Finish()

End

Public Sub Reload(sName As String)

  Dim tmpModule As Module

  tmpModule = Get(sName)

  $cModules[sName] = tmpModule

End

Public Function Get(sName As String, Optional bLoadModule As Boolean = True) As Module

  Dim sPath As String

  Dim cModule As Collection

  sPath = "./modules" &/ sName & ".mundus"

  cModule = JSON.Decode(File.Load(sPath))

  Return New Module(cModule, bLoadModule)

Catch

  Debug "Module is corrupted: " & sName

  Return Null

End

Private Function All_Read() As Collection

  Return $cModules

End

Private Function Count_Read() As Integer

  Return $cModules.Count

End
